<?xml version="1.0" encoding="utf-8" ?>
<ThinkTrees>

	<ThinkTreeDef>
		<defName>Humanoid</defName>
		<thinkRoot Class="AI.ThinkNode_Priority">
			<subNodes>

				<!-- Burning response -->
				<li Class="AI.ThinkNode_Subtree">
					<treeDef>BurningResponse</treeDef>
				</li>
				<li Class="AI.ThinkNode_Subtree">
					<treeDef>Psychotic</treeDef>
				</li>


				<!-- Self-defense only if not drafted -->
				<li Class="AI.ThinkNode_ConditionalNotDrafted">
					<subNodes>
						<li Class="AI.ThinkNode_Subtree">
							<treeDef>SelfDefense</treeDef>
						</li>
					</subNodes>
				</li>


				<!-- Mind broken - Give up and leave -->
				<li Class="AI.ThinkNode_ConditionalBroken">
					<brokenState>GiveUpExit</brokenState>
					<subNodes>
						<li Class="AI.JobGiver_ExitMapWalkRandom" />
					</subNodes>
				</li>

				<!-- Mind broken - Panic flee -->
				<li Class="AI.ThinkNode_ConditionalBroken">
					<brokenState>PanicFlee</brokenState>
					<subNodes>
						<li Class="AI.JobGiver_PanicFlee" />
					</subNodes>
				</li>

				<!-- Mind broken - Wander -->
				<li Class="AI.ThinkNode_ConditionalBroken">
					<brokenState>DazedWander</brokenState>
					<subNodes>
						<li Class="AI.JobGiver_WanderAnywhere" />
					</subNodes>
				</li>

				<!-- Prisoner team tree -->
				<li Class="AI.ThinkNode_ConditionalPrisoner">
					<subNodes>
						<li Class="AI.JobGiver_PrisonerEscape" />
						<li Class="AI.ThinkNode_SatisfyNeeds" />
						<li Class="AI.JobGiver_WanderCurrentRoom" />
						<li Class="AI.JobGiver_IdleError" />
					</subNodes>
				</li>

				<!-- Raider team tree -->
				<li Class="AI.ThinkNode_ConditionalHasSquadBrain">
					<subNodes>
						<li Class="AI.ThinkNode_Duty">

              <nodeTravel Class="AI.ThinkNode_Priority">
                <subNodes>
                  <li Class="AI.JobGiver_GotoTravelDestination" />
                  <li Class="AI.JobGiver_ExitMapWalkRandom" />
                  <li Class="AI.JobGiver_WanderCurrentRoom" />
                  <li Class="AI.JobGiver_IdleError" />
                </subNodes>
              </nodeTravel>

              <nodeDefend Class="AI.ThinkNode_Priority">
                <subNodes>
                  <li Class="AI.Decorator_UpdateEnemyTarget">
                    <targetAcquireRadius>65</targetAcquireRadius>
                    <targetKeepRadius>72</targetKeepRadius>
                  </li>
                  <li Class="AI.JobGiver_AIDefendPoint">
                    <maxRangeFromFlag>28</maxRangeFromFlag>
                  </li>
                  <li Class="AI.JobGiver_WanderNearDutyLocation">
                    <wanderRadius>8</wanderRadius>
                  </li>
                </subNodes>
              </nodeDefend>

              <nodeAssault Class="AI.ThinkNode_Priority">
								<subNodes>
                  <li Class="AI.Decorator_UpdateEnemyTarget">
                    <targetAcquireRadius>65</targetAcquireRadius>
                    <targetKeepRadius>72</targetKeepRadius>
                  </li>
									<li Class="AI.JobGiver_AIAttackTarget" />
                  <li Class="AI.JobGiver_AITrashCloseBuildings" />
                  <li Class="AI.JobGiver_AITrashBuildings" />
								</subNodes>
							</nodeAssault>

              <nodeHuntEnemiesIndividual Class="AI.ThinkNode_Priority">
                <subNodes>
                  <li Class="AI.Decorator_UpdateEnemyTarget">
                    <targetAcquireRadius>9999</targetAcquireRadius>
                    <targetKeepRadius>9999</targetKeepRadius>
                  </li>
                  <li Class="AI.JobGiver_AIAttackTarget" />
                  <li Class="AI.JobGiver_AITrashCloseBuildings" />
                  <li Class="AI.JobGiver_AITrashBuildings" />
                </subNodes>
              </nodeHuntEnemiesIndividual>

              <nodeExitAnywhere Class="AI.JobGiver_ExitMapWalkRandom" />

              <nodeExitNearest Class="AI.JobGiver_ExitMapWalkNearest" />
            </li>

            <li Class="AI.ThinkNode_ConditionalHasFallbackLocation" >
              <subNodes>
                <li Class="AI.JobGiver_WanderNearFallbackLocation" />
              </subNodes>
            </li>
            
						<li Class="AI.JobGiver_WanderAnywhere" />
						<li Class="AI.JobGiver_IdleError" />
					</subNodes>
				</li>




				<!-- If on colonist team, do forced and emergency work -->
				<li Class="AI.ThinkNode_ConditionalColonist">
					<subNodes>
						<!-- Take direct orders when drafted -->
						<li Class="AI.JobGiver_Orders" />

						<!-- Queue for forced work -->
						<li Class="AI.JobGiver_JobQueue" />

						<!-- Do emergency work (supercedes satisfying needs) -->
						<li Class="AI.JobGiver_WorkRoot">
							<emergencyWork>true</emergencyWork>
						</li>
					</subNodes>
				</li>

				<!-- Basic satisfy needs -->
				<li Class="AI.ThinkNode_SatisfyNeeds"/>



				<!-- If on colonist team, do non-forced non-emergency work and idle -->
				<li Class="AI.ThinkNode_ConditionalColonist">
					<subNodes>
						<li Class="AI.JobGiver_WorkRoot">
							<emergencyWork>false</emergencyWork>
						</li>

						<li Class="AI.ThinkNode_Tagger">
							<tagToGive>Idle</tagToGive>
							<subNodes>
								<li Class="AI.JobGiver_WanderColony">
								</li>
							</subNodes>
						</li>

					</subNodes>
				</li>

				<li Class="AI.JobGiver_WanderAnywhere" />

				<li Class="AI.JobGiver_IdleError"/>

			</subNodes>
		</thinkRoot>
	</ThinkTreeDef>
</ThinkTrees>